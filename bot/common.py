# bot/common.py

from bot.database.manager import DatabaseManager
from config.settings import MAX_QUESTIONS_PER_HOUR_PREMIUM, MAX_QUESTIONS_PER_HOUR_REGULAR
import logging

db_manager = DatabaseManager(MAX_QUESTIONS_PER_HOUR_PREMIUM, MAX_QUESTIONS_PER_HOUR_REGULAR)

def check_message_limit(user_id, context):
    user_message_count = context.user_data.get(f'message_count_{user_id}', 0)
    if db_manager.check_premium_status(user_id):
        return user_message_count >= 10  # –õ–∏–º–∏—Ç –¥–ª—è –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    else:
        return user_message_count >= 1  # –õ–∏–º–∏—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

def show_user_status(update, context, user_id):
    try:
        user = db_manager.get_user_by_id(user_id)
        if user:
            remaining_questions = (MAX_QUESTIONS_PER_HOUR_PREMIUM if user.is_premium else MAX_QUESTIONS_PER_HOUR_REGULAR) - user.message_count
            status_msg = f"üìå –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n- –í–æ–ø—Ä–æ—Å–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {remaining_questions} –≤ —ç—Ç–æ—Ç —á–∞—Å\n- –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–µ–Ω' if user.is_premium else '–ù–µ –∞–∫—Ç–∏–≤–µ–Ω'}"
            update.message.reply_text(status_msg)
    except Exception as e:
        logging.error(f"Error in show_user_status: {e}")
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.")